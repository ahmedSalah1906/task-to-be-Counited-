@model Task_1.VM.BillingVm

<div class="container bg-light p-4 rounded shadow-sm">
    <h3 class="mb-4">Create New Billing</h3>

    <form asp-action="Create" method="post">
        <input type="hidden" asp-for="Id" />

        <!-- Employee Dropdown -->
        <div class="mb-3 row">
            <label asp-for="EmployeeId" class="col-md-2 col-form-label">Employee</label>
            <div class="col-md-8">
                <select asp-for="EmployeeId" asp-items="Model.EmployeesList" class="form-select">
                    <option value="">Select Employee</option>
                </select>
                <span asp-validation-for="EmployeeId" class="text-danger"></span>
            </div>
        </div>

        <!-- Customer Dropdown -->
        <div class="mb-3 row">
            <label asp-for="CustomerId" class="col-md-2 col-form-label">Customer</label>
            <div class="col-md-8">
                <select asp-for="CustomerId" asp-items="Model.CustomerList" class="form-select">
                    <option value="">Select Customer</option>
                </select>
                <span asp-validation-for="CustomerId" class="text-danger"></span>
            </div>
        </div>

        <!-- Item Section (Initial Items) -->
        <div id="item-section" class="mb-3">
            @for (int i = 0; i < Model.Items.Count; i++)
            {
                <partial name="_ItemPartial" model="Model.Items[i]" />
            }
        </div>

        <!-- Add Item Button and Save Billing Button -->
        <div class="mb-4">
            <button type="button" class="btn btn-secondary me-2" onclick="addItem()">Add More Item</button>
            <button type="submit" class="btn btn-primary">Save Billing</button>
        </div>

        <!-- Total Price Display -->
        <div class="mt-3">
            <strong>Total Price:</strong> <span id="total-price">0.00</span>
        </div>
    </form>
</div>

@section Scripts {
    <script>
        let itemCount = @Model.Items.Count;

        // Function to add more items dynamically
        function addItem() {
            $.get('@Url.Action("RenderItemPartial")', { index: itemCount }, function (partialViewResult) {
                $('#item-section').append(partialViewResult);
                itemCount++;  // Increment item count after adding a new item
            });
        }

        // Function to update the total price whenever item quantity or price changes
        function updateTotal() {
            let totalPrice = 0;
            $(".item-entry").each(function () {
                const price = parseFloat($(this).find(".item-price").text()) || 0;
                const quantity = parseInt($(this).find(".item-quantity").val()) || 0;
                totalPrice += price * quantity;
            });
            document.getElementById("total-price").innerText = totalPrice.toFixed(2);
        }
    </script>
}
